import type { CancelablePromise } from '../core/CancelablePromise';
export declare class IpfsService {
    /**
     * Get file from IPFS
     * <h4>1 credit per API call.</h4><br/><p>Gets data from the IPFS.</p>
     * @param id IPFS CID of the file
     * @returns binary OK
     * @throws ApiError
     */
    static getIpfsData(id: string): CancelablePromise<Blob>;
    /**
     * Store data to IPFS
     * <h4>2 credits per API call. Only files up to 50MB are available for storing.</h4><br/>
     * <p>Stores file on the IPFS. We are leveraging <a href="https://web3.storage/" target="_blank">web3.storage</a> from <a href="https://protocol.ai/" target="_blank">Protocol Labs</a> for free storage on the IPFS.</p>
     *
     * @param formData
     * @returns any OK
     * @throws ApiError
     */
    static storeIpfs(formData: {
        /**
         * Your file to store
         */
        file?: Blob;
    }): CancelablePromise<{
        /**
         * IPFS CID identifier of the stored file.
         */
        ipfsHash?: string;
    }>;
}
