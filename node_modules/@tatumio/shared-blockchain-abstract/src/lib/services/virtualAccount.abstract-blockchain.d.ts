import { Blockchain } from '@tatumio/shared-core';
export declare const abstractBlockchainVirtualAccount: (args: {
    blockchain: Blockchain;
}) => {
    depositAddress: {
        checkExists: (address: string, index?: number) => Promise<import("@tatumio/api-client").Account>;
        create: typeof import("@tatumio/api-client").BlockchainAddressesService.generateDepositAddress;
        createMultiple: typeof import("@tatumio/api-client").BlockchainAddressesService.generateDepositAddressesBatch;
        assign: typeof import("@tatumio/api-client").BlockchainAddressesService.assignAddress;
        remove: typeof import("@tatumio/api-client").BlockchainAddressesService.removeAddress;
        getByAccount: typeof import("@tatumio/api-client").BlockchainAddressesService.getAllDepositAddresses;
    };
    withdrawal: {
        getAll: (status?: 'InProgress' | 'Done' | 'Cancelled', pageSize?: number, offset?: number) => Promise<import("@tatumio/api-client").WithdrawalObject[]>;
        broadcast: typeof import("@tatumio/api-client").WithdrawalService.broadcastBlockchainTransaction;
        create: typeof import("@tatumio/api-client").WithdrawalService.storeWithdrawal;
        complete: typeof import("@tatumio/api-client").WithdrawalService.completeWithdrawal;
    };
    storeTokenAddress: typeof import("@tatumio/api-client").BlockchainOperationsService.storeTokenAddress;
};
