"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.REPLACE_ME_WITH_TATUM_API_KEY = exports.expectHexString = exports.TEST_DATA = void 0;
const eth_test_data_1 = require("./test-data/eth.test-data");
const btc_test_data_1 = require("./test-data/btc.test-data");
const doge_test_data_1 = require("./test-data/doge.test-data");
const celo_test_data_1 = require("./test-data/celo.test-data");
const bch_test_data_1 = require("./test-data/bch.test-data");
const ltc_test_data_1 = require("./test-data/ltc.test-data");
const polygon_test_data_1 = require("./test-data/polygon.test-data");
const kcs_test_data_1 = require("./test-data/kcs.test-data");
const one_test_data_1 = require("./test-data/one.test-data");
const bsc_test_data_1 = require("./test-data/bsc.test-data");
const xrp_test_data_1 = require("./test-data/xrp.test-data");
const xlm_test_data_1 = require("./test-data/xlm.test-data");
const scrypta_test_data_1 = require("./test-data/scrypta.test-data");
const flow_test_data_1 = require("./test-data/flow.test-data");
const solana_test_data_1 = require("./test-data/solana.test-data");
const tron_test_data_1 = require("./test-data/tron.test-data");
const klaytn_test_data_1 = require("./test-data/klaytn.test-data");
const algo_test_data_1 = require("./test-data/algo.test-data");
const egld_test_data_1 = require("./test-data/egld.test-data");
const xdc_test_data_1 = require("./test-data/xdc.test-data");
exports.TEST_DATA = {
    MNEMONIC: 'kit erase harsh crawl taste rebel bus ocean traffic vast undo street patrol around network deputy wage usage aware void float snake baby sister',
    ETH: eth_test_data_1.ETH_TEST_DATA,
    BTC: btc_test_data_1.BTC_TEST_DATA,
    DOGE: doge_test_data_1.DOGE_TEST_DATA,
    CELO: celo_test_data_1.CELO_TEST_DATA,
    BCH: bch_test_data_1.BCH_TEST_DATA,
    LTC: ltc_test_data_1.LTC_TEST_DATA,
    POLYGON: polygon_test_data_1.POLYGON_TEST_DATA,
    KLAYTN: klaytn_test_data_1.KLAYTN_TEST_DATA,
    KCS: kcs_test_data_1.KCS_TEST_DATA,
    ONE: one_test_data_1.ONE_TEST_DATA,
    BSC: bsc_test_data_1.BSC_TEST_DATA,
    XRP: xrp_test_data_1.XRP_TEST_DATA,
    XLM: xlm_test_data_1.XLM_TEST_DATA,
    XDC: xdc_test_data_1.XDC_TEST_DATA,
    SCRYPTA: scrypta_test_data_1.SCRYPTA_TEST_DATA,
    FLOW: flow_test_data_1.FLOW_TEST_DATA,
    SOLANA: solana_test_data_1.SOLANA_TEST_DATA,
    TRON: tron_test_data_1.TRON_TEST_DATA,
    ALGO: algo_test_data_1.ALGO_TEST_DATA,
    EGLD: egld_test_data_1.EGLD_TEST_DATA,
    FLR: eth_test_data_1.ETH_TEST_DATA,
    CRO: eth_test_data_1.ETH_TEST_DATA,
    BASE: eth_test_data_1.ETH_TEST_DATA,
    AVAX: eth_test_data_1.ETH_TEST_DATA,
    OPTIMISM: eth_test_data_1.ETH_TEST_DATA,
    FTM: eth_test_data_1.ETH_TEST_DATA,
};
function expectHexString(value) {
    expect(value).toBeDefined();
    expect(value).toMatch(/^(0x|0X)?[a-fA-F0-9]+$/);
}
exports.expectHexString = expectHexString;
/**
 * @deprecated Replace it with API key from https://tatum.io/
 */
exports.REPLACE_ME_WITH_TATUM_API_KEY = process.env['TATUM_API_KEY'];
//# sourceMappingURL=shared-testing.js.map