import { Wallet } from '@tatumio/api-client';
import 'jest/index';
import { BlockchainTestData } from '../shared-testing';
interface SdkWithWalletFunctions {
    generateAddressFromXPub(xpub: string, i: number, options?: {
        testnet: boolean;
    }): string;
    generatePrivateKeyFromMnemonic(mnemonic: string, i: number, options?: {
        testnet: boolean;
    }): Promise<string>;
    generateAddressFromPrivateKey(privateKey: string, options?: {
        testnet: boolean;
    }): string;
    generateWallet(mnemonic?: string, options?: {
        testnet: boolean;
    }): Promise<Wallet>;
}
export declare const walletTestFactory: {
    generateBlockchainWallet: (sdk: SdkWithWalletFunctions, testData: BlockchainTestData, givenMnemonic?: string, skipInvalidMnemonic?: boolean) => void;
    generateAddressFromXpub: (sdk: SdkWithWalletFunctions, testData: BlockchainTestData) => void;
    generatePrivateKeyFromMnemonic: (sdk: SdkWithWalletFunctions, testData: BlockchainTestData, givenMnemonic?: string) => void;
    generateAddressFromPrivateKey: (sdk: SdkWithWalletFunctions, testData: BlockchainTestData, options?: {
        skipInvalid?: boolean;
    }) => void;
};
export {};
