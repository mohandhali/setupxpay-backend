import { CancelablePromise } from '@tatumio/api-client';
declare type Fn0Args = () => CancelablePromise<unknown>;
declare type Fn1Arg = (arg1: unknown) => CancelablePromise<unknown>;
declare type Fn2Arg = (arg1: unknown, arg2: unknown) => CancelablePromise<unknown>;
declare type Fn3Arg = (arg1: unknown, arg2: unknown, arg3: unknown) => CancelablePromise<unknown>;
declare type Fn4Arg = (arg1: unknown, arg2: unknown, arg3: unknown, arg4: unknown) => CancelablePromise<unknown>;
export declare type TestCasesApiCallMapping<T> = {
    [key in keyof T]: Fn0Args | [Fn1Arg, unknown] | [Fn2Arg, unknown, unknown] | [Fn3Arg, unknown, unknown, unknown] | [Fn4Arg, unknown, unknown, unknown, unknown];
};
export declare const testHelper: {
    callFnWithArgs: (fn: Fn0Args | Fn1Arg | Fn2Arg | Fn4Arg, args: unknown[]) => Promise<void>;
    expectMockCalled: (mocked: jest.Mock, body?: unknown[]) => void;
    expectMockNotCalled: (mocked: jest.Mock) => void;
    testCasesFromMapping: <T>(mapping: TestCasesApiCallMapping<T>) => unknown[][];
};
export {};
