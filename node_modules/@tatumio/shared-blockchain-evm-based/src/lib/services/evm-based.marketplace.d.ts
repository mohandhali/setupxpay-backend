import { ApproveErc20, MarketplaceService } from '@tatumio/api-client';
import { BroadcastFunction, ChainBuyAssetOnMarketplace, ChainCancelSellAssetOnMarketplace, ChainGenerateMarketplace, ChainSellAssetOnMarketplace, ChainUpdateFee, ChainUpdateFeeRecipient } from '@tatumio/shared-blockchain-abstract';
import { EvmBasedBlockchain } from '@tatumio/shared-core';
import { ApproveNftTransfer } from './evm-based.auction';
import { EvmBasedWeb3 } from './evm-based.web3';
export declare const evmBasedMarketplace: (args: {
    blockchain: EvmBasedBlockchain;
    web3: EvmBasedWeb3;
    broadcastFunction: BroadcastFunction;
}) => {
    prepare: {
        approveErc20Spending: (body: ApproveErc20, provider?: string) => Promise<string>;
        approveSpending: (body: ApproveNftTransfer, provider?: string) => Promise<string>;
        generateMarketplace: (body: ChainGenerateMarketplace, provider?: string) => Promise<string>;
        updateFee: (body: ChainUpdateFee, provider?: string) => Promise<string>;
        updateFeeRecipient: (body: ChainUpdateFeeRecipient, provider?: string) => Promise<string>;
        sellMarketplaceListing: (body: ChainSellAssetOnMarketplace, provider?: string) => Promise<string>;
        cancelMarketplaceListing: (body: ChainCancelSellAssetOnMarketplace, provider?: string) => Promise<string>;
        buyMarketplaceListing: (body: ChainBuyAssetOnMarketplace, provider?: string) => Promise<string>;
    };
    send: {
        approveErc20Spending: (body: ApproveErc20, provider?: string) => Promise<import("@tatumio/api-client").TransactionHash | import("@tatumio/api-client").SignatureId>;
        generateMarketplace: (body: ChainGenerateMarketplace, provider?: string) => Promise<import("@tatumio/api-client").TransactionHash | import("@tatumio/api-client").SignatureId>;
        updateFee: (body: ChainUpdateFee, provider?: string) => Promise<import("@tatumio/api-client").TransactionHash | import("@tatumio/api-client").SignatureId>;
        updateFeeRecipient: (body: ChainUpdateFeeRecipient, provider?: string) => Promise<import("@tatumio/api-client").TransactionHash | import("@tatumio/api-client").SignatureId>;
        sellMarketplaceListing: (body: ChainSellAssetOnMarketplace, provider?: string) => Promise<import("@tatumio/api-client").TransactionHash | import("@tatumio/api-client").SignatureId>;
        cancelMarketplaceListing: (body: ChainCancelSellAssetOnMarketplace, provider?: string) => Promise<import("@tatumio/api-client").TransactionHash | import("@tatumio/api-client").SignatureId>;
        buyMarketplaceListing: (body: ChainBuyAssetOnMarketplace, provider?: string) => Promise<import("@tatumio/api-client").TransactionHash | import("@tatumio/api-client").SignatureId>;
    };
    getMarketplaceListing: typeof MarketplaceService.getMarketplaceListing;
    getMarketplaceListings: typeof MarketplaceService.getMarketplaceListings;
    getMarketplaceFee: typeof MarketplaceService.getMarketplaceFee;
    getMarketplaceFeeRecipient: typeof MarketplaceService.getMarketplaceFeeRecipient;
};
