"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.evmBasedMarketplace = void 0;
const tslib_1 = require("tslib");
const api_client_1 = require("@tatumio/api-client");
const marketplace_1 = require("../transactions/marketplace");
const evmBasedMarketplace = (args) => {
    return {
        prepare: {
            approveErc20Spending: (body, provider) => (0, marketplace_1.marketplace)(args).prepare.approveErc20Spending(body, provider),
            approveSpending: (body, provider) => tslib_1.__awaiter(void 0, void 0, void 0, function* () { return (0, marketplace_1.marketplace)(args).prepare.approveSpending(body, provider); }),
            generateMarketplace: (body, provider) => (0, marketplace_1.marketplace)(args).prepare.generateMarketplace(body, provider),
            updateFee: (body, provider) => (0, marketplace_1.marketplace)(args).prepare.updateFee(body, provider),
            updateFeeRecipient: (body, provider) => (0, marketplace_1.marketplace)(args).prepare.updateFeeRecipient(body, provider),
            sellMarketplaceListing: (body, provider) => (0, marketplace_1.marketplace)(args).prepare.sellMarketplaceListing(body, provider),
            cancelMarketplaceListing: (body, provider) => (0, marketplace_1.marketplace)(args).prepare.cancelMarketplaceListing(body, provider),
            buyMarketplaceListing: (body, provider) => (0, marketplace_1.marketplace)(args).prepare.buyMarketplaceListing(body, provider),
        },
        send: {
            approveErc20Spending: (body, provider) => (0, marketplace_1.marketplace)(args).send.approveErc20Spending(body, provider),
            generateMarketplace: (body, provider) => (0, marketplace_1.marketplace)(args).send.generateMarketplace(body, provider),
            updateFee: (body, provider) => (0, marketplace_1.marketplace)(args).send.updateFee(body, provider),
            updateFeeRecipient: (body, provider) => (0, marketplace_1.marketplace)(args).send.updateFeeRecipient(body, provider),
            sellMarketplaceListing: (body, provider) => (0, marketplace_1.marketplace)(args).send.sellMarketplaceListing(body, provider),
            cancelMarketplaceListing: (body, provider) => (0, marketplace_1.marketplace)(args).send.cancelMarketplaceListing(body, provider),
            buyMarketplaceListing: (body, provider) => (0, marketplace_1.marketplace)(args).send.buyMarketplaceListing(body, provider),
        },
        getMarketplaceListing: api_client_1.MarketplaceService.getMarketplaceListing,
        getMarketplaceListings: api_client_1.MarketplaceService.getMarketplaceListings,
        getMarketplaceFee: api_client_1.MarketplaceService.getMarketplaceFee,
        getMarketplaceFeeRecipient: api_client_1.MarketplaceService.getMarketplaceFeeRecipient,
    };
};
exports.evmBasedMarketplace = evmBasedMarketplace;
//# sourceMappingURL=evm-based.marketplace.js.map