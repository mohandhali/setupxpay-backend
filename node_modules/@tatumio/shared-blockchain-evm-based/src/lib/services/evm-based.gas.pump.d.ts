import { EvmBasedWeb3 } from './evm-based.web3';
export declare type GasPumpChain = 'CELO' | 'TRON' | 'ONE' | 'XDC' | 'ETH' | 'MATIC' | 'KLAY' | 'BSC';
export declare const CELO_TESTNET_CUSTODIAL_FACTORY_V2 = "0x5E3D93eF7C1eE50eA4536791E1441e3281f55154";
export declare const CELO_MAINNET_CUSTODIAL_FACTORY_V2 = "0xd0b8460559b945aa578b81f0ab3ac998e7360332";
export declare const ETH_TESTNET_CUSTODIAL_FACTORY_V2 = "0x4B32F0c23477D8512b39009d1625eAF2a884156D";
export declare const ETH_MAINNET_CUSTODIAL_FACTORY_V2 = "0xa2a1bf5a83f9daec2dc364e1c561e937163cb613";
export declare const KLAY_TESTNET_CUSTODIAL_FACTORY_V2 = "0x75a4462bf0938cc7558ada32dc554ca5c7ed1adf";
export declare const KLAY_MAINNET_CUSTODIAL_FACTORY_V2 = "0x789c00ed7ddd72a806dbac40df926df32fde3c2f";
export declare const MATIC_TESTNET_CUSTODIAL_FACTORY_V2 = "0xf7b8514BD32E0d0f53703f8C829E8b61c78780dA";
export declare const MATIC_MAINNET_CUSTODIAL_FACTORY_V2 = "0xa6e2445a16859d3717aed095396afaab9ff2fbd3";
export declare const BSC_TESTNET_CUSTODIAL_FACTORY_V2 = "0x3807f9384bc6ff561245a60cb71e2cf65b8d146a";
export declare const BSC_MAINNET_CUSTODIAL_FACTORY_V2 = "0x40c762cb7d2f5ad719ed6c9651f5f2370f5a1c88";
export declare const TRON_TESTNET_CUSTODIAL_FACTORY_V2 = "TYGfTkhjii3gmxqBczcHn1FoTrRWFUXvsp";
export declare const TRON_MAINNET_CUSTODIAL_FACTORY_V2 = "TUHmKLeq26QFyMwxQSYd451c4SZQQuKcHb";
export declare const ONE_TESTNET_CUSTODIAL_FACTORY_V2 = "0xCd2AdA00c48A27FAa5Cc67F9A1ed55B89dDf7F77";
export declare const ONE_MAINNET_CUSTODIAL_FACTORY_V2 = "0xb1462fE8E9Cf82c0296022Cca7bEfA3Fd4c12B34";
export declare const XDC_TESTNET_CUSTODIAL_FACTORY_V2 = "0x1cfc7878cf6ae32a50f84481690f6fb04574de21";
export declare const XDC_MAINNET_CUSTODIAL_FACTORY_V2 = "0x1cfc7878cf6ae32a50f84481690f6fb04574de21";
export declare const indexesFromRange: (from: number, to: number) => string[];
export declare const evmBasedGasPump: () => {
    prepareGasPumpWalletBatchAbstract: (body: any, web3: EvmBasedWeb3, testnet?: boolean) => Promise<{
        params: any[];
        methodName: string;
        methodSig: any;
        bodyWithContractAddress: any;
    }>;
    getGasPumpFactoryContractAddress: (chain: GasPumpChain, testnet?: boolean) => "0x5E3D93eF7C1eE50eA4536791E1441e3281f55154" | "0xd0b8460559b945aa578b81f0ab3ac998e7360332" | "0x4B32F0c23477D8512b39009d1625eAF2a884156D" | "0xa2a1bf5a83f9daec2dc364e1c561e937163cb613" | "0x75a4462bf0938cc7558ada32dc554ca5c7ed1adf" | "0x789c00ed7ddd72a806dbac40df926df32fde3c2f" | "0xf7b8514BD32E0d0f53703f8C829E8b61c78780dA" | "0xa6e2445a16859d3717aed095396afaab9ff2fbd3" | "0x3807f9384bc6ff561245a60cb71e2cf65b8d146a" | "0x40c762cb7d2f5ad719ed6c9651f5f2370f5a1c88" | "TYGfTkhjii3gmxqBczcHn1FoTrRWFUXvsp" | "TUHmKLeq26QFyMwxQSYd451c4SZQQuKcHb" | "0xCd2AdA00c48A27FAa5Cc67F9A1ed55B89dDf7F77" | "0xb1462fE8E9Cf82c0296022Cca7bEfA3Fd4c12B34" | "0x1cfc7878cf6ae32a50f84481690f6fb04574de21";
};
