"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.abstractSdkNft = exports.abstractSdk = void 0;
const api_client_1 = require("@tatumio/api-client");
const kms_abstract_1 = require("./services/kms.abstract");
const nft_abstract_1 = require("./services/nft.abstract");
const ledger_abstract_1 = require("./services/ledger.abstract");
const logger_1 = require("./logger");
const abstractSdk = (args) => {
    (0, api_client_1.TatumApi)(args.apiKey, args.url);
    logger_1.logger.useLogger(args === null || args === void 0 ? void 0 : args.logger);
    return {
        subscriptions: api_client_1.NotificationSubscriptionsService,
        security: {
            checkMaliciousAddress: api_client_1.MaliciousAddressService.checkMalicousAddress,
        },
        tatum: {
            getCredits: api_client_1.ServiceUtilsService.getCredits,
            getVersion: api_client_1.ServiceUtilsService.getVersion,
            freezeApiKey: api_client_1.ServiceUtilsService.freezeApiKey,
            unfreezeApiKey: api_client_1.ServiceUtilsService.unfreezeApiKey,
        },
        kms: (0, kms_abstract_1.abstractSdkKms)(),
        ledger: (0, ledger_abstract_1.abstractSdkLedgerService)(),
    };
};
exports.abstractSdk = abstractSdk;
const abstractSdkNft = () => {
    return {
        nft: (0, nft_abstract_1.abstractSdkNftService)(),
        storage: {
            upload: api_client_1.IpfsService.storeIpfs,
            get: api_client_1.IpfsService.getIpfsData,
        },
    };
};
exports.abstractSdkNft = abstractSdkNft;
//# sourceMappingURL=abstract.sdk.js.map