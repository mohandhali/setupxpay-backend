"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tronWeb = void 0;
const tslib_1 = require("tslib");
const api_client_1 = require("@tatumio/api-client");
// tronweb lib dont have any typings (not even in @types)
// @ts-ignore
const tronweb_1 = tslib_1.__importDefault(require("tronweb"));
const tronWeb = (args) => {
    var _a;
    const tronProApiKey = (_a = args === null || args === void 0 ? void 0 : args.tronProApiKey) !== null && _a !== void 0 ? _a : getTronApiKey();
    return {
        getClient: (provider) => {
            const endpoint = provider || `${api_client_1.OpenAPI.BASE}/v3/tron/node/${api_client_1.TATUM_API_CONSTANTS.API_KEY}`;
            const HttpProvider = tronweb_1.default.providers.HttpProvider;
            const fullNode = new HttpProvider(endpoint);
            const solidityNode = new HttpProvider(endpoint);
            const eventServer = new HttpProvider(endpoint);
            const tronWebInstace = new tronweb_1.default(fullNode, solidityNode, eventServer);
            tronWebInstace.setHeader({
                'TRON-PRO-API-KEY': tronProApiKey,
            });
            return tronWebInstace;
        },
    };
};
exports.tronWeb = tronWeb;
function getTronApiKey() {
    var _a;
    return (_a = process.env['TRON_PRO_API_KEY']) !== null && _a !== void 0 ? _a : api_client_1.TATUM_API_CONSTANTS.TRON_PRO_API_KEY;
}
//# sourceMappingURL=tron.web.js.map